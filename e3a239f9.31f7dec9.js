(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),l=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=l.a.createContext({}),p=function(e){var t=l.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return l.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},u=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),u=a,m=b["".concat(r,".").concat(u)]||b[u]||d[u]||o;return n?l.a.createElement(m,i(i({ref:t},s),{},{components:n})):l.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var s=2;s<o;s++)r[s]=n[s];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return s}));var a=n(3),l=(n(0),n(106));const o={title:"Config Files"},r={unversionedId:"config-file",id:"config-file",isDocsHomePage:!1,title:"Config Files",description:"For each DocSearch request we receive, we create a custom JSON configuration",source:"@site/docs/config-file.md",slug:"/config-file",permalink:"/docs/config-file",version:"current",sidebar:"docs",previous:{title:"Inside the engine",permalink:"/docs/inside-the-engine"},next:{title:"How do we build a DocSearch index?",permalink:"/docs/how-do-we-build-an-index"}},i=[{value:"<code>index_name</code>",id:"index_name",children:[]},{value:"<code>start_urls</code>",id:"start_urls",children:[{value:"<code>selectors_key</code>, tailor your selectors",id:"selectors_key-tailor-your-selectors",children:[]},{value:"Using regular expressions",id:"using-regular-expressions",children:[]},{value:"Using custom tags",id:"using-custom-tags",children:[]},{value:"Using Page Rank",id:"using-page-rank",children:[]},{value:"Using custom selectors per page",id:"using-custom-selectors-per-page",children:[]}]},{value:"<code>selectors</code>",id:"selectors",children:[{value:"Using global selectors",id:"using-global-selectors",children:[]},{value:"Setting a default value",id:"setting-a-default-value",children:[]},{value:"Removing unnecessary characters",id:"removing-unnecessary-characters",children:[]},{value:"Targeting elements using XPath instead of CSS",id:"targeting-elements-using-xpath-instead-of-css",children:[]},{value:"<code>custom_settings</code> <em>Optional</em>",id:"custom_settings-optional",children:[]},{value:"<code>custom_settings.separatorsToIndex</code><em>Optional</em>",id:"custom_settingsseparatorstoindexoptional",children:[]},{value:"<code>custom_settings.synonyms</code> <em>Optional</em>",id:"custom_settingssynonyms-optional",children:[]},{value:"<code>scrape_start_urls</code> <em>Optional</em>",id:"scrape_start_urls-optional",children:[]},{value:"<code>selectors_exclude</code> <em>Optional</em>",id:"selectors_exclude-optional",children:[]},{value:"<code>stop_urls</code> <em>Optional</em>",id:"stop_urls-optional",children:[]},{value:"<code>min_indexed_level</code> <em>Optional</em>",id:"min_indexed_level-optional",children:[]},{value:"<code>only_content_level</code> <em>Optional</em>",id:"only_content_level-optional",children:[]},{value:"<code>nb_hits</code> <em>Special</em>",id:"nb_hits-special",children:[]}]},{value:"Sitemaps",id:"sitemaps",children:[{value:"<code>sitemap_urls</code> <em>Optional</em>",id:"sitemap_urls-optional",children:[]},{value:"<code>sitemap_alternate_links</code> <em>Optional</em>",id:"sitemap_alternate_links-optional",children:[]}]},{value:"JavaScript rendering",id:"javascript-rendering",children:[{value:"<code>js_render</code> <em>Optional</em>",id:"js_render-optional",children:[]},{value:"<code>js_wait</code> <em>Optional</em>",id:"js_wait-optional",children:[]},{value:"<code>use_anchors</code> <em>Optional</em>",id:"use_anchors-optional",children:[]},{value:"<code>user_agent</code> <em>Optional</em>",id:"user_agent-optional",children:[]}]}],c={toc:i};function s({components:e,...t}){return Object(l.b)("wrapper",Object(a.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(l.b)("p",null,"For each DocSearch request we receive, we create a custom JSON configuration\nfile that defines how the crawler should behave. You can find all the configs in\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/algolia/docsearch-configs/tree/master/configs"}),"this repository"),"."),Object(l.b)("p",null,"A DocSearch looks like this:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "index_name": "example",\n  "start_urls": ["https://www.example.com/docs"],\n  "selectors": {\n    "lvl0": "#content header h1",\n    "lvl1": "#content article h1",\n    "lvl2": "#content section h3",\n    "lvl3": "#content section h4",\n    "lvl4": "#content section h5",\n    "lvl5": "#content section h6",\n    "text": "#content header p,#content section p,#content section ol"\n  }\n}\n')),Object(l.b)("h2",{id:"index_name"},Object(l.b)("inlineCode",{parentName:"h2"},"index_name")),Object(l.b)("p",null,"This is the name of the Algolia index where your records will be pushed. The\n",Object(l.b)("inlineCode",{parentName:"p"},"apiKey")," we will share with you is restricted to work with this index and ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.algolia.com/doc/guides/security/api-keys/#search-only-api-key"}),"is a\nsearch-only key"),"."),Object(l.b)("p",null,"When using the free DocSearch crawler, the ",Object(l.b)("inlineCode",{parentName:"p"},"indexName")," will always be the name\nof the configuration file. If you're running DocSearch yourself, you can use any\nname you'd like."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "index_name": "example"\n}\n')),Object(l.b)("p",null,"When the DocSearch scraper runs, it builds a temporary index. Once scraping is\ncomplete, it moves that index to the name specified by ",Object(l.b)("inlineCode",{parentName:"p"},"index_name")," (replacing\nthe existing index)."),Object(l.b)("p",null,"By default, the name of the temporary index is the value of ",Object(l.b)("inlineCode",{parentName:"p"},"index_name")," +\n",Object(l.b)("em",{parentName:"p"},"_","tmp"),"."),Object(l.b)("p",null,"To use a different name, set the ",Object(l.b)("inlineCode",{parentName:"p"},"INDEX_NAME_TMP")," environment variable to a\ndifferent value. This variable can be set in the .env file alongside\n",Object(l.b)("inlineCode",{parentName:"p"},"APPLICATION_ID")," and ",Object(l.b)("inlineCode",{parentName:"p"},"API_KEY"),"."),Object(l.b)("h2",{id:"start_urls"},Object(l.b)("inlineCode",{parentName:"h2"},"start_urls")),Object(l.b)("p",null,"This array contains the list of URLs that will be used to start crawling your\nwebsite. The crawler will recursively follow any links (",Object(l.b)("inlineCode",{parentName:"p"},"<a>")," tags) from those\npages. It will not follow links that are on another domain and never follow\nlinks matching ",Object(l.b)("inlineCode",{parentName:"p"},"stop_urls"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "start_urls": ["https://www.example.com/docs"]\n}\n')),Object(l.b)("h3",{id:"selectors_key-tailor-your-selectors"},Object(l.b)("inlineCode",{parentName:"h3"},"selectors_key"),", tailor your selectors"),Object(l.b)("p",null,"You can define finer sets of selectors depending on the URL. You need to use the\nparameter ",Object(l.b)("inlineCode",{parentName:"p"},"selectors_key")," from your ",Object(l.b)("inlineCode",{parentName:"p"},"start_urls"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "start_urls": [\n    {\n      "url": "http://www.example.com/docs/faq/",\n      "selectors_key": "faq"\n    },\n    {\n      "url": "http://www.example.com/docs/"\n    }\n  ],\n  [\u2026],\n  "selectors": {\n    "default": {\n      "lvl0": ".docs h1",\n      "lvl1": ".docs h2",\n      "lvl2": ".docs h3",\n      "lvl3": ".docs h4",\n      "lvl4": ".docs h5",\n      "text": ".docs p, .docs li"\n    },\n    "faq": {\n      "lvl0": ".faq h1",\n      "lvl1": ".faq h2",\n      "lvl2": ".faq h3",\n      "lvl3": ".faq h4",\n      "lvl4": ".faq h5",\n      "text": ".faq p, .faq li"\n    }\n  }\n}\n')),Object(l.b)("p",null,"To find the right subset to use based on the URL, the scraper iterates over\nthese ",Object(l.b)("inlineCode",{parentName:"p"},"start_urls")," items. Only the first one to match is applied."),Object(l.b)("p",null,"Considering the URL ",Object(l.b)("inlineCode",{parentName:"p"},"http://www.example.com/en/api/")," with the configuration:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "start_urls": [\n    {\n      "url": "http://www.example.com/doc/",\n      "selectors_key": "doc"\n    },\n    {\n      "url": "http://www.example.com/doc/faq/",\n      "selectors_key": "faq"\n    },\n   [\u2026],\n  ]\n}\n')),Object(l.b)("p",null,"Only the set of selectors related to ",Object(l.b)("inlineCode",{parentName:"p"},"doc")," will be applied to the URL. The\ncorrect configuration should be built the other way around (as primarily\ndescribed)."),Object(l.b)("p",null,"If one ",Object(l.b)("inlineCode",{parentName:"p"},"start_urls")," item has no ",Object(l.b)("inlineCode",{parentName:"p"},"selectors_key")," defined, the ",Object(l.b)("inlineCode",{parentName:"p"},"default")," set will\nbe used. Do not forget to set this fallback set of selectors."),Object(l.b)("h3",{id:"using-regular-expressions"},"Using regular expressions"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"start_urls")," and ",Object(l.b)("inlineCode",{parentName:"p"},"stop_urls")," options also enable you to use regular\nexpressions to express more complex patterns. This object must at least contain\na ",Object(l.b)("inlineCode",{parentName:"p"},"url")," key targeting a reachable page."),Object(l.b)("p",null,"You can also define a ",Object(l.b)("inlineCode",{parentName:"p"},"variables")," key that will be injected into your specific\nURL pattern. The following example makes this variable feature clearer:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "start_urls": [\n    {\n      "url": "http://www.example.com/docs/(?P<lang>.*?)/(?P<version>.*?)/",\n      "variables": {\n        "lang": ["en", "fr"],\n        "version": ["latest", "3.3", "3.2"]\n      }\n    }\n  ]\n}\n')),Object(l.b)("p",null,"The beneficial side effect of using this syntax is that every record extracted\nfrom pages matching ",Object(l.b)("inlineCode",{parentName:"p"},"http://www.example.com/docs/en/latest")," will have attributes\n",Object(l.b)("inlineCode",{parentName:"p"},"lang: en")," and ",Object(l.b)("inlineCode",{parentName:"p"},"version: latest"),". It enables you to filter on ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.algolia.com/doc/api-reference/api-parameters/facetFilters/"}),"these\n",Object(l.b)("inlineCode",{parentName:"a"},"facetFilters")),"."),Object(l.b)("p",null,"The following example shows how the UI filters results matching a specific\nlanguage and version."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'docsearch({\n  [\u2026],\n  algoliaOptions: {\n    \'facetFilters\': ["lang:en", "version:latest"]\n  },\n  [\u2026],\n});\n')),Object(l.b)("h3",{id:"using-custom-tags"},"Using custom tags"),Object(l.b)("p",null,"You can also apply custom tags to some pages without the need to use regular\nexpressions. In that case, add the list of tags to the ",Object(l.b)("inlineCode",{parentName:"p"},"tags")," key. Note that\nthose tags will be automatically added as facets in Algolia, allowing you to\nfilter based on their values as well."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "start_urls": [\n    {\n      "url": "http://www.example.com/docs/concepts/",\n      "tags": ["concepts", "terminology"]\n    }\n  ]\n}\n')),Object(l.b)("p",null,"From the JS snippet:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"docsearch({\n  [\u2026],\n  algoliaOptions: {\n    'facetFilters': [\"tags:concepts\"]\n  },\n});\n")),Object(l.b)("h3",{id:"using-page-rank"},"Using Page Rank"),Object(l.b)("p",null,"To give more weight to some pages. This parameter helps to boost records built\nfrom the page. Pages with highest ",Object(l.b)("inlineCode",{parentName:"p"},"page_rank")," will be returned before pages with\na lower ",Object(l.b)("inlineCode",{parentName:"p"},"page_rank"),". Note that you can pass any numeric value, including\nnegative values."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "start_urls": [\n    {\n      "url": "http://www.example.com/docs/concepts/",\n      "page_rank": 5\n    },\n    {\n      "url": "http://www.example.com/docs/contributors/",\n      "page_rank": 1\n    }\n  ]\n}\n')),Object(l.b)("p",null,"In this example, records built from the ",Object(l.b)("em",{parentName:"p"},"Concepts")," page will be ranked higher\nthan results extracted from the ",Object(l.b)("em",{parentName:"p"},"Contributors")," page."),Object(l.b)("h3",{id:"using-custom-selectors-per-page"},"Using custom selectors per page"),Object(l.b)("p",null,"If the markup of your website is so different from one page to another that you\ncan't have generic selectors, you can namespace your selectors and specify which\nset of selectors should be applied to specific pages."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "start_urls": [\n    "http://www.example.com/docs/",\n    {\n      "url": "http://www.example.com/docs/concepts/",\n      "selectors_key": "concepts"\n    },\n    {\n      "url": "http://www.example.com/docs/contributors/",\n      "selectors_key": "contributors"\n    }\n  ],\n  "selectors": {\n    "default": {\n      "lvl0": ".main h1",\n      "lvl1": ".main h2",\n      "lvl2": ".main h3",\n      "lvl3": ".main h4",\n      "lvl4": ".main h5",\n      "text": ".main p"\n    },\n    "concepts": {\n      "lvl0": ".header h2",\n      "lvl1": ".main h1.title",\n      "lvl2": ".main h2.title",\n      "lvl3": ".main h3.title",\n      "lvl4": ".main h5.title",\n      "text": ".main p"\n    },\n    "contributors": {\n      "lvl0": ".main h1",\n      "lvl1": ".contributors .name",\n      "lvl2": ".contributors .title",\n      "text": ".contributors .description"\n    }\n  }\n}\n')),Object(l.b)("p",null,"Here, all documentation pages will use the selectors defined in\n",Object(l.b)("inlineCode",{parentName:"p"},"selectors.default")," while the page under ",Object(l.b)("inlineCode",{parentName:"p"},"./concepts")," will use\n",Object(l.b)("inlineCode",{parentName:"p"},"selectors.concepts")," and those under ",Object(l.b)("inlineCode",{parentName:"p"},"./contributors")," will use\n",Object(l.b)("inlineCode",{parentName:"p"},"selectors.contributors"),"."),Object(l.b)("h2",{id:"selectors"},Object(l.b)("inlineCode",{parentName:"h2"},"selectors")),Object(l.b)("p",null,"This object contains all the CSS selectors that will be used to create the\nrecord hierarchy. It can contain up to 6 levels (",Object(l.b)("inlineCode",{parentName:"p"},"lvl0"),", ",Object(l.b)("inlineCode",{parentName:"p"},"lvl1"),", ",Object(l.b)("inlineCode",{parentName:"p"},"lvl2"),", ",Object(l.b)("inlineCode",{parentName:"p"},"lvl3"),",\n",Object(l.b)("inlineCode",{parentName:"p"},"lvl4"),", ",Object(l.b)("inlineCode",{parentName:"p"},"lvl5"),") and ",Object(l.b)("inlineCode",{parentName:"p"},"text"),"."),Object(l.b)("p",null,"A default config would be to target the page ",Object(l.b)("inlineCode",{parentName:"p"},"title")," or ",Object(l.b)("inlineCode",{parentName:"p"},"h1")," as ",Object(l.b)("inlineCode",{parentName:"p"},"lvl0"),", the ",Object(l.b)("inlineCode",{parentName:"p"},"h2"),"\nas ",Object(l.b)("inlineCode",{parentName:"p"},"lvl1"),", ",Object(l.b)("inlineCode",{parentName:"p"},"h3")," as ",Object(l.b)("inlineCode",{parentName:"p"},"lvl2"),", and ",Object(l.b)("inlineCode",{parentName:"p"},"p")," as ",Object(l.b)("inlineCode",{parentName:"p"},"text"),", but this is highly dependent on\nthe markup."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"text")," key is mandatory, but we highly recommend setting also ",Object(l.b)("inlineCode",{parentName:"p"},"lvl0"),", ",Object(l.b)("inlineCode",{parentName:"p"},"lvl1"),"\nand ",Object(l.b)("inlineCode",{parentName:"p"},"lvl2")," to have a decent depth of relevance."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "selectors": {\n    "lvl0": "#content header h1",\n    "lvl1": "#content article h1",\n    "lvl2": "#content section h3",\n    "lvl3": "#content section h4",\n    "lvl4": "#content section h5",\n    "lvl5": "#content section h6",\n    "text": "#content header p,#content section p,#content section ol"\n  }\n}\n')),Object(l.b)("p",null,"Selectors can be passed as strings, or as objects containing a ",Object(l.b)("inlineCode",{parentName:"p"},"selector")," key.\nOther special keys can be set, as documented below."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "selectors": {\n    "lvl0": {\n      "selector": "#content header h1"\n    }\n  }\n}\n')),Object(l.b)("h3",{id:"using-global-selectors"},"Using global selectors"),Object(l.b)("p",null,"The default way of extracting content through selectors is to read the HTML\nmarkup from top to bottom. This works well with semi-structured content, like a\nhierarchy of headers. This breaks when the relevant information is not part of\nthe same flow. For example when the title is not part of a header or sidebar."),Object(l.b)("p",null,"For that reason, you can set a selector as global, meaning that it will match on\nthe whole page and will be the same for all records extracted from this page."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "selectors": {\n    "lvl0": {\n      "selector": "#content header h1",\n      "global": true\n    }\n  }\n}\n')),Object(l.b)("p",null,"We do not recommend ",Object(l.b)("inlineCode",{parentName:"p"},"text")," selectors to be global."),Object(l.b)("h3",{id:"setting-a-default-value"},"Setting a default value"),Object(l.b)("p",null,"If a selector doesn't match a valid element on the page, you can define a\n",Object(l.b)("inlineCode",{parentName:"p"},"default_value")," as a fallback."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "selectors": {\n    "lvl0": {\n      "selector": "#content header h1",\n      "default_value": "Documentation"\n    }\n  }\n}\n')),Object(l.b)("h3",{id:"removing-unnecessary-characters"},"Removing unnecessary characters"),Object(l.b)("p",null,"Some documentation adds special characters to headings, like ",Object(l.b)("inlineCode",{parentName:"p"},"#")," or ",Object(l.b)("inlineCode",{parentName:"p"},"\u203a"),". Those\ncharacters have a stylistic value but no meaning and shouldn't be indexed in the\nsearch results."),Object(l.b)("p",null,"You can define a list of characters you want to exclude from the final indexed\nvalue by setting the ",Object(l.b)("inlineCode",{parentName:"p"},"strip_chars")," key."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "selectors": {\n    "lvl0": {\n      "selector": "#content header h1",\n      "strip_chars": "#\u203a"\n    }\n  }\n}\n')),Object(l.b)("p",null,"Note that you can also define ",Object(l.b)("inlineCode",{parentName:"p"},"strip_chars")," directly at the root of the\nconfiguration and it will be applied to all selectors."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "strip_chars": "#\u203a"\n}\n')),Object(l.b)("h3",{id:"targeting-elements-using-xpath-instead-of-css"},"Targeting elements using XPath instead of CSS"),Object(l.b)("p",null,"CSS selectors are a clear and concise way to target elements of a page, but they\nhave a limitations. For example, you cannot go up the cascade with CSS."),Object(l.b)("p",null,"If you need a more powerful selector mechanism, you can write your selectors\nusing XPath by setting ",Object(l.b)("inlineCode",{parentName:"p"},"type: xpath"),"."),Object(l.b)("p",null,"The following example will look for a ",Object(l.b)("inlineCode",{parentName:"p"},"li.chapter.active.done")," and then go up\ntwo levels in the DOM until it finds a ",Object(l.b)("inlineCode",{parentName:"p"},"a"),". The content of this ",Object(l.b)("inlineCode",{parentName:"p"},"a")," will then be\nused as the value of the ",Object(l.b)("inlineCode",{parentName:"p"},"lvl0")," selector."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "selectors": {\n    "lvl0": {\n      "selector": "//li[@class=\\"chapter active done\\"]/../../a",\n      "type": "xpath",\n      "global": true\n    }\n  }\n}\n')),Object(l.b)("p",null,"XPath selector can be hard to read. We highly encourage you to test them in your\nbrowser first, making sure they match what you're expecting."),Object(l.b)("h3",{id:"custom_settings-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"custom_settings")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"This key can be used to overwrite your Algolia index settings. We don't\nrecommend changing it as the default settings are meant to work for all\nwebsites."),Object(l.b)("h3",{id:"custom_settingsseparatorstoindexoptional"},Object(l.b)("inlineCode",{parentName:"h3"},"custom_settings.separatorsToIndex"),Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"One use case would be to configure the ",Object(l.b)("inlineCode",{parentName:"p"},"separatorsToIndex")," setting. By default\nAlgolia will consider all special characters as a word separator. In some\ncontexts, like for method names, you might want ",Object(l.b)("inlineCode",{parentName:"p"},"_"),", ",Object(l.b)("inlineCode",{parentName:"p"},"/")," or ",Object(l.b)("inlineCode",{parentName:"p"},"#")," to keep their\nmeaning."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "custom_settings": {\n    "separatorsToIndex": "_/"\n  }\n}\n')),Object(l.b)("p",null,"Check the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.algolia.com/doc/api-reference/settings-api-parameters/"}),"Algolia documentation")," for more information about the Algolia\nsettings."),Object(l.b)("h3",{id:"custom_settingssynonyms-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"custom_settings.synonyms")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"custom_settings")," can include a ",Object(l.b)("inlineCode",{parentName:"p"},"synonyms")," key that is an array of synonyms.\nEach element is an array of one-word synonym. These words are interchangeable."),Object(l.b)("p",null,"For example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'"custom_settings": {\n    "synonyms": [\n      [\n        "js",\n        "javascript"\n      ],\n      [\n        "es6",\n        "ECMAScript6",\n        "ECMAScript2015"\n      ]\n    ]\n  },\n')),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Note that you can use ",Object(l.b)("a",Object(a.a)({parentName:"em"},{href:"https://www.algolia.com/doc/guides/managing-results/optimize-search-results/adding-synonyms/#the-different-types-of-synonyms"}),"advanced synonym with Algolia"),". Our scraper only\nsupports regular one-word synonyms.")),Object(l.b)("h3",{id:"scrape_start_urls-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"scrape_start_urls")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"By default, the crawler will extract content from the pages defined in\n",Object(l.b)("inlineCode",{parentName:"p"},"start_urls"),". If you do not have any valuable content on your ",Object(l.b)("inlineCode",{parentName:"p"},"starts_urls")," or\nif it's a duplicate of another page, you should set this to ",Object(l.b)("inlineCode",{parentName:"p"},"false"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "scrape_start_urls": false\n}\n')),Object(l.b)("h3",{id:"selectors_exclude-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"selectors_exclude")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"This expects an array of CSS selectors. Any element matching one of those\nselectors will be removed from the page before any data is extracted from it."),Object(l.b)("p",null,"This can be used to remove a table of content, a sidebar, or a footer, to make\nother selectors easier to write."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "selectors_exclude": [".footer", "ul.deprecated"]\n}\n')),Object(l.b)("h3",{id:"stop_urls-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"stop_urls")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"This is an array of strings or regular expressions. Whenever the crawler is\nabout to visit a link, it will first check if the link matches something in the\narray. If it does, it will not follow the link. This should be used to restrict\npages the crawler should visit."),Object(l.b)("p",null,"Note that this is often used to avoid duplicate content, by adding\n",Object(l.b)("inlineCode",{parentName:"p"},"http://www.example.com/docs/index.html")," if you already have\n",Object(l.b)("inlineCode",{parentName:"p"},"http://www.example.com/docs/")," as a ",Object(l.b)("inlineCode",{parentName:"p"},"start_urls"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "stop_urls": ["https://www.example.com/docs/index.html", "license.html"]\n}\n')),Object(l.b)("h3",{id:"min_indexed_level-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"min_indexed_level")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"The default value is ",Object(l.b)("inlineCode",{parentName:"p"},"0"),". By increasing it, you can choose not to index some\nrecords if they don't have enough ",Object(l.b)("inlineCode",{parentName:"p"},"lvlX")," matching. For example, with a\n",Object(l.b)("inlineCode",{parentName:"p"},"min_indexed_level: 2"),", the scraper indexes temporary records having at least\n",Object(l.b)("inlineCode",{parentName:"p"},"lvl0"),", ",Object(l.b)("inlineCode",{parentName:"p"},"lvl1")," and ",Object(l.b)("inlineCode",{parentName:"p"},"lvl2")," set. You can ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.algolia.com/doc/api-reference/settings-api-parameters/"}),"find out more details about this\nstrategy in this section"),"."),Object(l.b)("p",null,"This is useful when your documentation has pages that share the same ",Object(l.b)("inlineCode",{parentName:"p"},"lvl0")," and\n",Object(l.b)("inlineCode",{parentName:"p"},"lvl1")," for example. In that case, you don't want to index all the shared\nrecords, but want to keep the content different across pages."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "min_indexed_level": 2\n}\n')),Object(l.b)("h3",{id:"only_content_level-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"only_content_level")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"When ",Object(l.b)("inlineCode",{parentName:"p"},"only_content_level")," is set to ",Object(l.b)("inlineCode",{parentName:"p"},"true"),", then the crawler won't create\nrecords for the ",Object(l.b)("inlineCode",{parentName:"p"},"lvlX")," selectors."),Object(l.b)("p",null,"If used, ",Object(l.b)("inlineCode",{parentName:"p"},"min_indexed_level")," is ignored."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "only_content_level": true\n}\n')),Object(l.b)("h3",{id:"nb_hits-special"},Object(l.b)("inlineCode",{parentName:"h3"},"nb_hits")," ",Object(l.b)("em",{parentName:"h3"},"Special")),Object(l.b)("p",null,"The number of records that were extracted and indexed by DocSearch. We check\nthis key internally to keep track of any unintended spike or drop that could\nreveal a misconfiguration."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"nb_hits")," is updated automatically each time you run DocSearch on your config.\nIf the term is a tty, DocSearch will prompt you before updating the field. To\navoid being prompted, set the ",Object(l.b)("inlineCode",{parentName:"p"},"UPDATE_NB_HITS")," environment variable to ",Object(l.b)("inlineCode",{parentName:"p"},"true"),"\n(to enable) or ",Object(l.b)("inlineCode",{parentName:"p"},"false")," (to disable). This variable can be set in the .env file\nalongside ",Object(l.b)("inlineCode",{parentName:"p"},"APPLICATION_ID")," and ",Object(l.b)("inlineCode",{parentName:"p"},"API_KEY"),"."),Object(l.b)("p",null,"You don't have to edit this field. We're documenting it here in case you were\nwondering what it's all about."),Object(l.b)("h2",{id:"sitemaps"},"Sitemaps"),Object(l.b)("p",null,"If your website has a ",Object(l.b)("inlineCode",{parentName:"p"},"sitemap.xml")," file, you can let DocSearch know and it will\nuse it to define which pages to crawl."),Object(l.b)("h3",{id:"sitemap_urls-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"sitemap_urls")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"You can pass an array of URLs pointing to your sitemap(s) files. If this value\nis set, DocSearch will try to read URLs from your sitemap(s) instead of\nfollowing every link of your ",Object(l.b)("inlineCode",{parentName:"p"},"starts_urls"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "sitemap_urls": ["http://www.example.com/docs/sitemap.xml"]\n}\n')),Object(l.b)("p",null,"You must explicitly defined this parameter, our scraper doesn't follow\n",Object(l.b)("inlineCode",{parentName:"p"},"robots.txt")),Object(l.b)("h3",{id:"sitemap_alternate_links-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"sitemap_alternate_links")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"Sitemaps can contain ",Object(l.b)("em",{parentName:"p"},"alternative links")," for URLs. Those are other versions of\nthe same page, in a different language, or with a different URL. By default\nDocSearch will ignore those URLs."),Object(l.b)("p",null,"Set this to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," if you want those other versions to be crawled as well."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "sitemap_urls": ["http://www.example.com/docs/sitemap.xml"],\n  "sitemap_alternate_links": true\n}\n')),Object(l.b)("p",null,"With the above configuration and the ",Object(l.b)("inlineCode",{parentName:"p"},"sitemap.xml")," below, both\n",Object(l.b)("inlineCode",{parentName:"p"},"http://www.example.com/docs/")," and ",Object(l.b)("inlineCode",{parentName:"p"},"http://www.example.com/docs/de/")," will be\ncrawled."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'  <url>\n    <loc>http://www.example.com/docs/</loc>\n    <xhtml:link rel="alternate" hreflang="de" href="http://www.example.com/de/"/>\n  </url>\n')),Object(l.b)("h2",{id:"javascript-rendering"},"JavaScript rendering"),Object(l.b)("p",null,"By default DocSearch expects websites to have server-side rendering, meaning\nthat HTML source is returned directly by the server. If your content is\ngenerated by the front-end, you have to tell DocSearch to emulate a browser\nthrough Selenium."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"As client-side crawl is way slower than server-side crawl, we highly encourage\nyou to update your website to enable server-side rendering.")),Object(l.b)("h3",{id:"js_render-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"js_render")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"Set this value to true if your website requires client-side rendering. This will\nmake DocSearch spawn a Selenium proxy to fetch all your web pages."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "js_render": true\n}\n')),Object(l.b)("h3",{id:"js_wait-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"js_wait")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"If your website is slow to load, you can use ",Object(l.b)("inlineCode",{parentName:"p"},"js_wait")," to tell DocSearch to wait\na specific amount of time (in seconds) for the page to load before extracting\nits content."),Object(l.b)("p",null,"Note that this option might have a large impact on the time required to crawl\nyour website and we would encourage you to enable server-side rendering on your\nwebsite instead."),Object(l.b)("p",null,"This option has no impact if ",Object(l.b)("inlineCode",{parentName:"p"},"js_render")," is set to ",Object(l.b)("inlineCode",{parentName:"p"},"false"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "js_render": true,\n  "js_wait": 2\n}\n')),Object(l.b)("h3",{id:"use_anchors-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"use_anchors")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"Websites using client-side rendering often don't use full URLs, but instead take\nadvantage of the URL hash (the part after the ",Object(l.b)("inlineCode",{parentName:"p"},"#"),")."),Object(l.b)("p",null,"If your website is using such URLs, you should set ",Object(l.b)("inlineCode",{parentName:"p"},"use_anchors")," to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," for\nDocSearch to index all your content."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "js_render": true,\n  "use_anchors": true\n}\n')),Object(l.b)("h3",{id:"user_agent-optional"},Object(l.b)("inlineCode",{parentName:"h3"},"user_agent")," ",Object(l.b)("em",{parentName:"h3"},"Optional")),Object(l.b)("p",null,"You can override the user agent used to crawl your website. By default, this\nvalue is:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{}),"  Algolia DocSearch Crawler\n")),Object(l.b)("p",null,"However, if the crawl of your website requires a browser emulation (i.e.\n",Object(l.b)("inlineCode",{parentName:"p"},"js_render=true"),"), our ",Object(l.b)("inlineCode",{parentName:"p"},"user_agent")," is:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{}),"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/71.0.3578.98 Safari/537.36\n")),Object(l.b)("p",null,"To override it, from the configuration:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "user_agent": "Custom Bot"\n}\n')))}s.isMDXComponent=!0}}]);