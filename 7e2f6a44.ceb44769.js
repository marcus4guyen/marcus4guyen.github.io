(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),s=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=r,h=p["".concat(i,".").concat(d)]||p[d]||b[d]||o;return n?a.a.createElement(h,c(c({ref:t},u),{},{components:n})):a.a.createElement(h,c({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=(n(0),n(106));const o={title:"Run your own"},i={unversionedId:"run-your-own",id:"run-your-own",isDocsHomePage:!1,title:"Run your own",description:"The version of DocSearch we offer for free is hosted on our own servers, running",source:"@site/docs/run-your-own.md",slug:"/run-your-own",permalink:"/docs/run-your-own",version:"current",sidebar:"docs",previous:{title:"How do we build a DocSearch index?",permalink:"/docs/how-do-we-build-an-index"}},c=[{value:"Set up your environment",id:"set-up-your-environment",children:[]},{value:"Run the crawl from the Docker image",id:"run-the-crawl-from-the-docker-image",children:[]},{value:"Running the crawler from the code base",id:"running-the-crawler-from-the-code-base",children:[{value:"Installation",id:"installation",children:[]},{value:"Installing Chrome driver",id:"installing-chrome-driver",children:[]},{value:"Running the crawler",id:"running-the-crawler",children:[]}]},{value:"Create a new configuration",id:"create-a-new-configuration",children:[]},{value:"Testing your results",id:"testing-your-results",children:[]},{value:"Integration",id:"integration",children:[]},{value:"Help",id:"help",children:[]}],l={toc:c};function u({components:e,...t}){return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The version of DocSearch we offer for free is hosted on our own servers, running\nevery 24 hours. You do not need to think about the crawl. However, if you want\nto update your results with more control, or if you are ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/who-can-apply"}),"not compliant with our\nchecklist"),", or if your website sits behind a firewall, you might want to run\nthe crawler yourself."),Object(a.b)("p",null,"The whole code base of DocSearch is open source, and we package it as a Docker\nimage to make this even easier for you to use."),Object(a.b)("h2",{id:"set-up-your-environment"},"Set up your environment"),Object(a.b)("p",null,"You'll need to set your Algolia application ID and admin API key as environment\nvariables. If you don't have an Algolia account, you need to ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.algolia.com/pricing"}),"create one"),"."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("inlineCode",{parentName:"p"},"APPLICATION_ID")," set to your Algolia Application ID")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("inlineCode",{parentName:"p"},"API_KEY")," set to your API Key. Make sure to use an API key with ",Object(a.b)("strong",{parentName:"p"},"write"),"\naccess to your index. It needs ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.algolia.com/doc/guides/security/api-keys/#acl"}),"the ACL ",Object(a.b)("inlineCode",{parentName:"a"},"addObject"),", ",Object(a.b)("inlineCode",{parentName:"a"},"editSettings")," and\n",Object(a.b)("inlineCode",{parentName:"a"},"deleteIndex")),"."))),Object(a.b)("p",null,"For convenience, you can create a ",Object(a.b)("inlineCode",{parentName:"p"},".env")," file in the repository root."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"APPLICATION_ID=YOUR_APP_ID\nAPI_KEY=YOUR_API_KEY\n")),Object(a.b)("h2",{id:"run-the-crawl-from-the-docker-image"},"Run the crawl from the Docker image"),Object(a.b)("p",null,"You can run a crawl from the packaged Docker image to crawl your website. You\nwill need to ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/stedolan/jq/wiki/Installation"}),"install jq, a lightweight command-line JSON processor")),Object(a.b)("p",null,"Then you need to start the crawl according to your configuration. You should\ncheck the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/config-file"}),"dedicated configuration documentation"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),'docker run -it --env-file=.env -e "CONFIG=$(cat /path/to/your/config.json | jq -r tostring)" algolia/docsearch-scraper\n')),Object(a.b)("p",null,"Once the scraping finishes, you can ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"#integration"}),"jump to the Integration step"),"."),Object(a.b)("h2",{id:"running-the-crawler-from-the-code-base"},"Running the crawler from the code base"),Object(a.b)("h3",{id:"installation"},"Installation"),Object(a.b)("p",null,"The scraper is a python tool ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://scrapy.org/"}),"based on scrapy"),". We do recommend to use\n",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/pypa/pipenv"}),"pipenv")," to install the python environment."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/algolia/docsearch-scraper"}),"Clone the scraper repository"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://pipenv.readthedocs.io/en/latest/install/#installing-pipenv"}),"Install pipenv")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"pipenv install")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"pipenv shell"))),Object(a.b)("p",null,"If you plan to use the browser emulation ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/config-file"}),"(",Object(a.b)("inlineCode",{parentName:"a"},"js_render")," set to true)"),", you\nneed to follow this extra step. If you don't, you can dismiss this step."),Object(a.b)("h3",{id:"installing-chrome-driver"},"Installing Chrome driver"),Object(a.b)("p",null,"Some websites rendering requires JavaScript. Our crawler relies on a headless\nchrome emulation. You will need to set up a ChromeDriver."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"http://chromedriver.chromium.org/getting-started"}),"Install the driver")," suited to your OS and the version of your Chrome. We\ndo recommend to use the latest version."),Object(a.b)("li",{parentName:"ul"},"Set the environment variable ",Object(a.b)("inlineCode",{parentName:"li"},"CHROMEDRIVER_PATH")," in your ",Object(a.b)("inlineCode",{parentName:"li"},".env")," file. This\npath must target the downloaded extracted driver.")),Object(a.b)("p",null,"You are ready to go."),Object(a.b)("h3",{id:"running-the-crawler"},"Running the crawler"),Object(a.b)("p",null,"Running ",Object(a.b)("inlineCode",{parentName:"p"},"pipenv shell")," will enable your virtual environment. From there, you can\nrun one crawl with the following command:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"$ ./docsearch run /path/to/your/config.json\n")),Object(a.b)("p",null,"Or from the Docker image:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"$ ./docsearch docker:run /path/to/your/config.json\n")),Object(a.b)("p",null,"This will start the crawl. It extracts content from parsed pages and push the\nbuilt records to Algolia."),Object(a.b)("h2",{id:"create-a-new-configuration"},"Create a new configuration"),Object(a.b)("p",null,"To create a configuration, run ",Object(a.b)("inlineCode",{parentName:"p"},"./docsearch bootstrap"),". A prompt will ask you\nfor some information and will create a JSON configuration you can use as a base."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),'$ ./docsearch bootstrap\n# Enter your documentation url\nstart url: http://www.example.com/docs/\n# Pick another name, or press enter\nindex_name is example [enter to confirm]: <Enter>\n\n=================\n{\n  "index_name": "example",\n  "start_urls": [\n    "http://www.example.com/docs/"\n  ],\n  "stop_urls": [],\n  "selectors": {\n    "lvl0": "FIXME h1",\n    "lvl1": "FIXME h2",\n    "lvl2": "FIXME h3",\n    "lvl3": "FIXME h4",\n    "lvl4": "FIXME h5",\n    "lvl5": "FIXME h6",\n    "text": "FIXME p, FIXME li"\n  }\n}\n=================\n')),Object(a.b)("p",null,"Create a file from this text into a filename ",Object(a.b)("inlineCode",{parentName:"p"},"example.json"),", we'll use it later\non to start the crawl. You can browse the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/algolia/docsearch-configs/tree/master/configs"}),"list of live configurations"),"."),Object(a.b)("h2",{id:"testing-your-results"},"Testing your results"),Object(a.b)("p",null,"You can test your results by running ",Object(a.b)("inlineCode",{parentName:"p"},"./docsearch playground"),". This will open a\nweb page with a search input. You can do live tests against the indexed results."),Object(a.b)("img",{src:"https://docsearch.algolia.com/img/assets/playground.png",alt:"Playground"}),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Note that if the command fails (it can happen on non-Mac machines), you can get\nthe same result by running a live server in the ",Object(a.b)("inlineCode",{parentName:"em"},"./playground")," subdirectory.","`")),Object(a.b)("h2",{id:"integration"},"Integration"),Object(a.b)("p",null,"Once you're satisfied with your config, you can integrate the dropdown menu in\nyour website by following the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/dropdown"}),"instructions here"),"."),Object(a.b)("p",null,"The difference is that you'll also have to add the ",Object(a.b)("inlineCode",{parentName:"p"},"appId")," key to your\n",Object(a.b)("inlineCode",{parentName:"p"},"docsearch()")," instance. Also don't forget to use a ",Object(a.b)("strong",{parentName:"p"},"search")," API key here (in\nother words, not the ",Object(a.b)("strong",{parentName:"p"},"write")," API key you used for the crawl)."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"docsearch({\n  appId: '<APP_ID>', // Add your own Application ID\n  apiKey: '<API_KEY>', // Set it to your own *search* API key\n  [\u2026] // Other parameters are the same\n});\n")),Object(a.b)("h2",{id:"help"},"Help"),Object(a.b)("p",null,"You can run ",Object(a.b)("inlineCode",{parentName:"p"},"./docsearch")," without any argument to see the list of all available\ncommands."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Note that we use this command-line tool internally at Algolia to run the free\nhosted version, so you might not need all the listed commands.")))}u.isMDXComponent=!0}}]);